{"version":3,"sources":["../src/integration.ts","../src/libs/validate-options.ts","../src/index.ts"],"sourcesContent":["import { createIndex } from \"pagefind\";\nimport type { AstroIntegration } from \"astro\";\nimport { validateOptions, PagefindOptions } from \"./libs/validate-options\";\nimport { z, ZodError } from 'zod';\n\ntype Options = z.infer<typeof PagefindOptions>;\n\nexport const integration = (options: Options): AstroIntegration => {\n\tlet generate = true;\n\tconst packageName = 'astro-pagefind';\n\tlet validatedOptions: Options;\n\n\treturn {\n\t\tname: packageName,\n\t\thooks: {\n\t\t\t'astro:config:done': async ({ logger }) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidatedOptions = validateOptions(options);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error instanceof ZodError) {\n\t\t\t\t\t\tgenerate = false;\n\t\t\t\t\t\tlogger.error(`Invalid options for \\`security-txt\\`. \\`security.txt\\` will not be generated.`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t'astro:build:done': async ({ dir, logger }) => {\n\t\t\t\tif (!generate) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { index } = await createIndex(validatedOptions.index);\n\t\t\t\t\tlogger.info(`Created Pagefind index.`);\n\n\t\t\t\t\tvalidatedOptions.directories.map(async (directory) => {\n\t\t\t\t\t\tawait index?.addDirectory({ path: new URL(directory, dir).pathname });\n\t\t\t\t\t\tlogger.info(`Added ${directory} to the index.`);\n\t\t\t\t\t});\n\n\t\t\t\t\tawait index?.writeFiles({ outputPath: new URL(validatedOptions.site, dir).pathname });\n\t\t\t\t\tlogger.info(`Wrote Pagefind files to ${validatedOptions.site}.`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlogger.error(`Error building Pagefind index. Search will not be available.`);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport default integration;","import { z } from 'zod';\n\nexport const PagefindOptions = z.object({\n\tindex: z.object({\n\t\trootSelector: z.string().optional(),\n\t\texcludeSelectors: z.array(z.string()).optional(),\n\t\tforceLanguage: z.string().optional(),\n\t\tkeepIndexUrl: z.boolean().optional(),\n\t\tverbose: z.boolean().optional(),\n\t\tlogfile: z.string().optional(),\n\t}).optional().default({}),\n\tdirectories: z.array(z.string()).optional().default(['']),\n\tsite: z.string().optional().default('pagefind'),\n}).optional().default({});\n\nexport const validateOptions = (options: unknown) => PagefindOptions.parse(options);","import { integration } from \"./integration\";\n\nexport default integration;\n"],"mappings":"AAAA,OAAS,eAAAA,MAAmB,WCA5B,OAAS,KAAAC,MAAS,MAEX,IAAMC,EAAkBD,EAAE,OAAO,CACvC,MAAOA,EAAE,OAAO,CACf,aAAcA,EAAE,OAAO,EAAE,SAAS,EAClC,iBAAkBA,EAAE,MAAMA,EAAE,OAAO,CAAC,EAAE,SAAS,EAC/C,cAAeA,EAAE,OAAO,EAAE,SAAS,EACnC,aAAcA,EAAE,QAAQ,EAAE,SAAS,EACnC,QAASA,EAAE,QAAQ,EAAE,SAAS,EAC9B,QAASA,EAAE,OAAO,EAAE,SAAS,CAC9B,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,EACxB,YAAaA,EAAE,MAAMA,EAAE,OAAO,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,EACxD,KAAMA,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,UAAU,CAC/C,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,EAEXE,EAAmBC,GAAqBF,EAAgB,MAAME,CAAO,EDZlF,OAAY,YAAAC,MAAgB,MAIrB,IAAMC,EAAeC,GAAuC,CAClE,IAAIC,EAAW,GACTC,EAAc,iBAChBC,EAEJ,MAAO,CACN,KAAMD,EACN,MAAO,CACN,oBAAqB,MAAO,CAAE,OAAAE,CAAO,IAAM,CAC1C,GAAI,CACHD,EAAmBE,EAAgBL,CAAO,CAC3C,OAASM,EAAO,CACf,GAAIA,aAAiBR,EACpBG,EAAW,GACXG,EAAO,MAAM,2EAA+E,MAE5F,OAAME,CAER,CACD,EAEA,mBAAoB,MAAO,CAAE,IAAAC,EAAK,OAAAH,CAAO,IAAM,CAC9C,GAAKH,EAIL,GAAI,CACH,GAAM,CAAE,MAAAO,CAAM,EAAI,MAAMC,EAAYN,EAAiB,KAAK,EAC1DC,EAAO,KAAK,yBAAyB,EAErCD,EAAiB,YAAY,IAAI,MAAOO,GAAc,CACrD,MAAMF,GAAO,aAAa,CAAE,KAAM,IAAI,IAAIE,EAAWH,CAAG,EAAE,QAAS,CAAC,EACpEH,EAAO,KAAK,SAASM,CAAS,gBAAgB,CAC/C,CAAC,EAED,MAAMF,GAAO,WAAW,CAAE,WAAY,IAAI,IAAIL,EAAiB,KAAMI,CAAG,EAAE,QAAS,CAAC,EACpFH,EAAO,KAAK,2BAA2BD,EAAiB,IAAI,GAAG,CAChE,MAAgB,CACfC,EAAO,MAAM,8DAA8D,CAC5E,CACD,CACD,CACD,CACD,EEhDA,IAAOO,EAAQC","names":["createIndex","z","PagefindOptions","validateOptions","options","ZodError","integration","options","generate","packageName","validatedOptions","logger","validateOptions","error","dir","index","createIndex","directory","src_default","integration"]}